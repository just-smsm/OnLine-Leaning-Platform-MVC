@model OnlineLearningPlatform.ViewModels.QuizAnswerViewModel

@{
    ViewData["Title"] = "Create Answer";
}

<h2 class="mb-4">Create a New Answer</h2>

<form asp-action="CreateAnswer" method="post" class="needs-validation" novalidate>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @* id input for Answer *@
    <input hidden asp-for="Id">
    <div class="mb-3">
        <label asp-for="AnswerText" class="form-label"></label>
        <input asp-for="AnswerText" class="form-control" required />
        <div class="invalid-feedback">
            Please enter the answer text.
        </div>
        <span asp-validation-for="AnswerText" class="text-danger"></span>
    </div>

    <div class="mb-3 form-check">
        <input asp-for="IsCorrect" class="form-check-input" type="checkbox" />
        <label asp-for="IsCorrect" class="form-check-label"></label>
    </div>

    <!-- Hidden input for QuestionId -->
    <input type="hidden" asp-for="QuestionId" />

    <button type="submit" class="btn btn-primary">Create Answer</button>
</form>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        // Bootstrap validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')

            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}
